-- ESTE SCRIPT CREA LA BD DE CERO E INSERTA REGISTROS --
--------------------------------------------------------

-- SI NO FUNCIONA, ELIMINAR PRIMERO TABLAS
DROP TABLE entradas_salidas;
DROP TABLE entradas_salidas_mensuales;
DROP TABLE pagos_mensuales;
DROP TABLE vehiculos;
DROP TABLE empleados;
-- -----------------------------------------------------
-- Table   empleados 
-- -----------------------------------------------------
DROP TABLE IF EXISTS   empleados  ;

CREATE TABLE IF NOT EXISTS   empleados  (
   id  INT NOT NULL  GENERATED BY DEFAULT AS IDENTITY(START WITH 0),
   nombres  VARCHAR(45) NOT NULL,
   apellidos  VARCHAR(45) NOT NULL,
   documento  VARCHAR(45) NULL,
   celular  VARCHAR(45) NULL,
   contrasenia  VARCHAR(45) NULL,
   email  VARCHAR(45) NULL,
   cargo  VARCHAR(2) NOT NULL,
   estado varchar(1) NOT NULL,
  PRIMARY KEY ( id ))
 ;


-- -----------------------------------------------------
-- Table   vehiculos 
-- -----------------------------------------------------
DROP TABLE IF EXISTS   vehiculos  ;

CREATE TABLE IF NOT EXISTS   vehiculos  (
   placa  VARCHAR(8) NOT NULL,
   tipo  VARCHAR(1) NOT NULL,
   propietario  VARCHAR(45) NULL,
   fecha_creacion  TIMESTAMP NULL,
  PRIMARY KEY ( placa ))
 ;


-- -----------------------------------------------------
-- Table   entradas_salidas 
-- -----------------------------------------------------
DROP TABLE IF EXISTS   entradas_salidas  ;

CREATE TABLE IF NOT EXISTS   entradas_salidas  (
   id  INT NOT NULL  GENERATED BY DEFAULT AS IDENTITY(START WITH 0),
   placa  VARCHAR(8) NOT NULL,
   fecha_hora_entrada  TIMESTAMP NOT NULL,
   fecha_hora_salida  TIMESTAMP NULL,
   descuento  INT NOT NULL,
   valor_pagar  INT NOT NULL,
   deja_casco  BOOLEAN NULL,
   deja_llaves  BOOLEAN NULL,
   ficha_nro  VARCHAR(3) NULL,
   observacion VARCHAR(300) NULL,
   entrada_empleados_id  INT NOT NULL,
   salida_empleados_id  INT NULL,
  PRIMARY KEY ( id ),
  CONSTRAINT  fk_entradas_salidas_empleados_input 
    FOREIGN KEY ( entrada_empleados_id )
    REFERENCES   empleados  ( id )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT  fk_entradas_salidas_empleados_output
    FOREIGN KEY ( salida_empleados_id )
    REFERENCES   empleados  ( id )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,

  CONSTRAINT  fk_entradas_salidas_vehiculos 
    FOREIGN KEY ( placa )
    REFERENCES   vehiculos  ( placa )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
 ;


-- -----------------------------------------------------
-- Table   pagos_mensuales 
-- -----------------------------------------------------
DROP TABLE IF EXISTS   pagos_mensuales  ;

CREATE TABLE IF NOT EXISTS   pagos_mensuales  (
   id  INT NULL  GENERATED BY DEFAULT AS IDENTITY(START WITH 0),
   placa  VARCHAR(8) NOT NULL,
   fecha_inicio  TIMESTAMP NOT NULL,
   fecha_fin  TIMESTAMP NULL,
   descuento  INT NOT NULL,
   valor_pagar  INT NOT NULL,
   empleados_id  INT NULL,
  PRIMARY KEY ( id ),
  -- INDEX  idx_empleados_id  ( empleados_id  ), --
  -- INDEX  fk_pagos_mensuales_placa_idx_idx  ( placa ), --
  CONSTRAINT  fk_pagos_mensuales_empleados
    FOREIGN KEY ( empleados_id )
    REFERENCES   empleados  ( id )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT  fk_pagos_mensuales_vehiculos
    FOREIGN KEY ( placa )
    REFERENCES   vehiculos  ( placa )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
 ;


-- -----------------------------------------------------
-- Table   entradas_salidas_mensuales 
-- -----------------------------------------------------
DROP TABLE IF EXISTS   entradas_salidas_mensuales  ;

CREATE TABLE IF NOT EXISTS   entradas_salidas_mensuales  (
   id  INT NOT NULL  GENERATED BY DEFAULT AS IDENTITY(START WITH 0),
   pagos_mensuales_id  INT NOT NULL, -- Le puse NOT a null
   fecha_hora_entrada  TIMESTAMP NOT NULL,
   fecha_hora_salida  TIMESTAMP NULL,
   deja_casco  BOOLEAN NULL,
   deja_llaves  BOOLEAN NULL,
   ficha_nro  VARCHAR(3) NULL,
   observacion VARCHAR(300) NULL,
   entrada_empleados_id  INT NOT NULL,
   salida_empleados_id  INT NULL,
  PRIMARY KEY ( id ),  
  CONSTRAINT  fk_entradas_salidas_mensuales_pagos_mensuales 
    FOREIGN KEY ( pagos_mensuales_id )
    REFERENCES   pagos_mensuales  ( id )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT  fk_entradas_salidas_mensuales_empleados_input 
    FOREIGN KEY ( entrada_empleados_id )
    REFERENCES   empleados  ( id )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT  fk_entradas_salidas_mensuales_empleados_output
    FOREIGN KEY ( salida_empleados_id )
    REFERENCES   empleados  ( id )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
 ;

-- INDICES, EJECUTARLOS DESPUES POR SEPARADO
CREATE INDEX  idx_entradas_salidas_entrada_empleados_id ON entradas_salidas( entrada_empleados_id);
CREATE INDEX  idx_entradas_salidas_salida_empleados_id ON entradas_salidas( salida_empleados_id);
CREATE INDEX  idx_entradas_salidas_placa ON entradas_salidas(placa);
CREATE INDEX  idx_entradas_salidas_mensuales_pagos_mensuales_id ON entradas_salidas_mensuales(pagos_mensuales_id);
CREATE INDEX  idx_pagos_mensuales_empleados_id ON pagos_mensuales(empleados_id);

CREATE INDEX  idx_entradas_salidas_mensuales_entrada_empleados_id ON entradas_salidas_mensuales( entrada_empleados_id);
CREATE INDEX  idx_entradas_salidas_mensuales_salida_empleados_id ON entradas_salidas_mensuales( salida_empleados_id);

CREATE INDEX  idx_pagos_mensuales_placa ON pagos_mensuales(placa);

-- REGISTROS --

INSERT INTO empleados (id, nombres, apellidos, documento, celular, contrasenia, email, cargo, estado) VALUES
(1, 'Hugo Armando', 'Castro Gallardo', '983658852', '3136792098', '123456', 'hugocastrog@hotmail.com', 'A','A');

