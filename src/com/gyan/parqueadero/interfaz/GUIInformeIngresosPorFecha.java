/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gyan.parqueadero.interfaz;

import com.gyan.parqueadero.entidades.Empleados;
import com.gyan.parqueadero.entidades.EntradasSalidas;
import com.gyan.parqueadero.entidades.PagosMensuales;
import com.gyan.parqueadero.logicanegocio.EmpleadosLogicaNegocio;
import com.gyan.parqueadero.logicanegocio.EntradasSalidasLogicaNegocio;
import com.gyan.parqueadero.utilidades.Utilidades;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author libardo
 */
public class GUIInformeIngresosPorFecha extends javax.swing.JInternalFrame {

    /**
     * Determina si proviene del menu Mis Recaudos
     */
    private boolean misRecaudos;

    /**
     * Array asociativo con los tipos de vehiculos: C=>Carro, M=>Moto
     */
    public static Hashtable<String, String> TIPOS_VEHICULO = new Hashtable<String, String>();

    /**
     * Constructor
     *
     * @param misRecaudos true cuando viene del menú Mis Recaudos
     */
    public GUIInformeIngresosPorFecha(boolean misRecaudos) {
        this.misRecaudos = misRecaudos;
        initComponents();
        //Agrega los items al cboTipoVehiculo
        llenarComboEmpleados();

        pnlNorte.add(btnBuscar);

        //Inicializa las columnas del jTable
        this.inicializarTabla();
        TIPOS_VEHICULO.put("M", "Moto");
        TIPOS_VEHICULO.put("C", "Carro");
        
    }

    private void llenarComboEmpleados() {

        EmpleadosLogicaNegocio logica = new EmpleadosLogicaNegocio();

        DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
        if (this.misRecaudos) {
            // Sólo colocar el empleado que inició sesión
            Empleados emp = Utilidades.empleadoSesion;
            
            modeloCombo.addElement("[" + emp.getId() + "]" + " " + emp.getNombres() + " " + emp.getApellidos());
        } else {
            List<Empleados> lista = logica.getEmpleados();
            modeloCombo.addElement("Todos");
            for (Empleados obj : lista) {
                if (obj.getEstado().equals("A"))//Activo
                {
                    modeloCombo.addElement("[" + obj.getId() + "]" + " " + obj.getNombres() + " " + obj.getApellidos());
                }
            }
        }
        cboEmpleados.setModel(modeloCombo);

    }

    /**
     * Inicializa las columnas del jTable y pone cero filas
     */
    private void inicializarTabla() {
        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Tipo", "Placa", "Tarifa", "FechaEntrada", "FechaSalida", "Descuento", "ValorPagado", "Empĺeado"
                }
        ));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCentro = new javax.swing.JPanel();
        pnlTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();
        pnlTotal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtTotalRegistros = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotalDescuentos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTotalIngresos = new javax.swing.JTextField();
        pnlNorte = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboEmpleados = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtFecha = new com.toedter.calendar.JDateChooser();
        btnBuscar = new javax.swing.JButton();
        pnlSur = new javax.swing.JPanel();
        btnCerrar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Informe - Ingresos por tipo de vehículo y fecha");

        pnlCentro.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pnlCentro.setLayout(new java.awt.BorderLayout());

        pnlTabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblResultado);

        javax.swing.GroupLayout pnlTablaLayout = new javax.swing.GroupLayout(pnlTabla);
        pnlTabla.setLayout(pnlTablaLayout);
        pnlTablaLayout.setHorizontalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 898, Short.MAX_VALUE)
            .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTablaLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        pnlTablaLayout.setVerticalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
            .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTablaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlCentro.add(pnlTabla, java.awt.BorderLayout.CENTER);

        pnlTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlTotal.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel4.setText("Total registros: ");
        pnlTotal.add(jLabel4);

        txtTotalRegistros.setText("000000000");
        txtTotalRegistros.setPreferredSize(new java.awt.Dimension(110, 32));
        pnlTotal.add(txtTotalRegistros);

        jLabel5.setText("Total Descuentos:");
        pnlTotal.add(jLabel5);

        txtTotalDescuentos.setText("000000000000");
        txtTotalDescuentos.setPreferredSize(new java.awt.Dimension(134, 32));
        pnlTotal.add(txtTotalDescuentos);

        jLabel2.setText("Total Ingresos $:");
        pnlTotal.add(jLabel2);

        txtTotalIngresos.setEditable(false);
        txtTotalIngresos.setText("00000000000000");
        pnlTotal.add(txtTotalIngresos);

        pnlCentro.add(pnlTotal, java.awt.BorderLayout.SOUTH);

        getContentPane().add(pnlCentro, java.awt.BorderLayout.CENTER);

        pnlNorte.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setText("Empleado");
        pnlNorte.add(jLabel3);

        cboEmpleados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pnlNorte.add(cboEmpleados);

        jLabel1.setText("Fecha:");
        pnlNorte.add(jLabel1);

        txtFecha.setPreferredSize(new java.awt.Dimension(130, 32));
        pnlNorte.add(txtFecha);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/buscar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        pnlNorte.add(btnBuscar);

        getContentPane().add(pnlNorte, java.awt.BorderLayout.NORTH);

        pnlSur.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSur.add(btnCerrar);

        getContentPane().add(pnlSur, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarDatos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * Busca y procesa los datos
     */
    private void buscarDatos() {
        if (txtFecha.getDate() == null){
            Utilidades.mensajeAdvertencia("Debe seleccionar una fecha", "Atención");
            txtFecha.requestFocus();
            return;
        }
        try {
            Date fecha1 = txtFecha.getDate();
            fecha1 = Utilidades.quitarHoraAFecha(fecha1);

            Calendar cal = Calendar.getInstance();
            cal.setTime(fecha1);

            cal.add(Calendar.DATE, 1);  //Agrega 1 dia
            Date fecha2 = cal.getTime();

            //Primero: Tabla EntradasSalidas
            EntradasSalidasLogicaNegocio logica = new EntradasSalidasLogicaNegocio();
            List<EntradasSalidas> result = null;
            if (cboEmpleados.getSelectedIndex() == 0) {
                //Busca todos los empleados
                result = logica.entradasSalidasPorFecha(fecha1, fecha2);
            } else {
                //Busca los datos de un empleado
                int empleadoId = Integer.parseInt(Utilidades.extraerId(cboEmpleados.getSelectedItem().toString()));

                result = logica.entradasSalidasPorEmpleadoFecha(empleadoId, fecha1, fecha2);
            }

            //"Id", "Tipo", "Placa", "Tarifa", "FechaEntrada", "FechaSalida", "ValorPagado","Empĺeado"
            //Llenar los datos en la jTable
            this.inicializarTabla();
            DefaultTableModel model = (DefaultTableModel) tblResultado.getModel();

            Object rowData[] = new Object[9];
            long total = 0;
            long descuentos = 0;
            for (int i = 0; i < result.size(); i++) {
                if (result.get(i).getFechaHoraSalida() != null) {

                    rowData[0] = result.get(i).getId();
                    rowData[1] = TIPOS_VEHICULO.get(result.get(i).getPlaca().getTipo());
                    rowData[2] = result.get(i).getPlaca().getPlaca();
                    rowData[3] = "Por horas";
                    rowData[4] = Utilidades.formatoFecha(result.get(i).getFechaHoraEntrada());
                    rowData[5] = Utilidades.formatoFecha(result.get(i).getFechaHoraSalida());
                    rowData[6] = result.get(i).getDescuento();
                    rowData[7] = result.get(i).getValorPagar();
                    rowData[8] = result.get(i).getSalidaEmpleadosId().getNombres() + " " + result.get(i).getSalidaEmpleadosId().getApellidos();
                    total = total + result.get(i).getValorPagar();
                    descuentos = descuentos + (long)result.get(i).getDescuento();
                    model.addRow(rowData);
                }
            }

            //Segundo: Tabla PagosMensuales
            List<PagosMensuales> result2 = null;
            if (cboEmpleados.getSelectedIndex() == 0) {
                //Busca todos los empleados
                result2 = logica.pagosMensualesPorFecha(fecha1, fecha2);
            } else {
                //Busca los datos de un empleado
                int empleadoId = Integer.parseInt(Utilidades.extraerId(cboEmpleados.getSelectedItem().toString()));

                result2 = logica.pagosMensualesPorEmpleadoFecha(empleadoId, fecha1, fecha2);
            }

            //"Id", "Tipo", "Placa", "Tarifa", "FechaEntrada", "FechaSalida", "ValorPagado","Empĺeado"
            //Llenar los datos en la jTable
            for (int i = 0; i < result2.size(); i++) {

                rowData[0] = result2.get(i).getId();
                rowData[1] = TIPOS_VEHICULO.get(result2.get(i).getPlaca().getTipo());
                rowData[2] = result2.get(i).getPlaca().getPlaca();
                rowData[3] = "Mensual";
                rowData[4] = Utilidades.formatoFecha(result2.get(i).getFechaInicio());
                rowData[5] = Utilidades.formatoFecha(result2.get(i).getFechaFin());
                rowData[6] = result2.get(i).getDescuento();
                rowData[7] = result2.get(i).getValorPagar();
                rowData[8] = result2.get(i).getEmpleadosId().getNombres() + " " + result2.get(i).getEmpleadosId().getApellidos();
                total = total + result2.get(i).getValorPagar();
                descuentos = descuentos + (long)result2.get(i).getDescuento();
                model.addRow(rowData);
            }
            txtTotalDescuentos.setText("" + Utilidades.formatoMoneda(descuentos));
            txtTotalIngresos.setText("" + Utilidades.formatoMoneda(total));
            int totRegistros = result.size() + result2.size();
            txtTotalRegistros.setText("" + totRegistros);
            
            if (totRegistros == 0){
                Utilidades.mensajeExito("No se encontraron ingresos en esta fecha", "Atención");
            }
        } catch (ParseException ex) {
            Utilidades.mensajeAdvertencia("Error al procesar la fecha", "Atención");
            Logger.getLogger(GUIInformeIngresosPorFecha.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JComboBox<String> cboEmpleados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCentro;
    private javax.swing.JPanel pnlNorte;
    private javax.swing.JPanel pnlSur;
    private javax.swing.JPanel pnlTabla;
    private javax.swing.JPanel pnlTotal;
    private javax.swing.JTable tblResultado;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextField txtTotalDescuentos;
    private javax.swing.JTextField txtTotalIngresos;
    private javax.swing.JTextField txtTotalRegistros;
    // End of variables declaration//GEN-END:variables
}

