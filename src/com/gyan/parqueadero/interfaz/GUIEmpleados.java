package com.gyan.parqueadero.interfaz;

import com.gyan.parqueadero.entidades.Empleados;
import com.gyan.parqueadero.logicanegocio.EmpleadosLogicaNegocio;
import com.gyan.parqueadero.utilidades.Utilidades;
import java.awt.Point;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author libardo Para que las celdas del jTable no sean editables, se usó este
 * tutorial: http://www.elprogramador.com.mx/celdas-no-editables-en-jtable/
 */
public class GUIEmpleados extends javax.swing.JInternalFrame {

    private String accion;

    /**
     * Creates new form GUITiposVehiculo
     */
    public GUIEmpleados() {
        initComponents();
        inicializarTabla();
        cargarDatosTabla();
        txtId.setEnabled(false);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtDocumento.setEnabled(false);
        txtCelular.setEnabled(false);
        txtContrasena.setEnabled(false);
        txtEmail.setEnabled(false);
        cboCargo.setEnabled(false);
        cboEstado.setEnabled(false);
        btnGrabar.setEnabled(false);
        btnEliminar.setEnabled(false);
        this.setSize(1200, 680);
    }

    private void inicializarTabla() {
        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Nombres", "Apellidos", "Documento", "Celular", "Email", "Cargo", "Estado"
                }
        ));
    }

    private void cargarDatosTabla() {
        EmpleadosLogicaNegocio logica = new EmpleadosLogicaNegocio();
        List<Empleados> result = logica.getEmpleados();
        this.inicializarTabla();
        DefaultTableModel model = (DefaultTableModel) tblDatos.getModel();

        Object rowData[] = new Object[8];//No columnas
        for (int i = 0; i < result.size(); i++) {
            rowData[0] = result.get(i).getId();
            rowData[1] = result.get(i).getNombres();
            rowData[2] = result.get(i).getApellidos();
            rowData[3] = result.get(i).getDocumento();
            rowData[4] = result.get(i).getCelular();
            rowData[5] = result.get(i).getEmail();
            rowData[6] = result.get(i).getCargo().equals("A") ? "Administrador" : "Empleado";
            rowData[7] = result.get(i).getEstado().equals("A") ? "Activo" : "Inactivo";
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlNorte = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        lblContrasena = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboCargo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cboEstado = new javax.swing.JComboBox<>();
        pnlCentro = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new JTable(){

            public boolean isCellEditable(int rowIndex, int colIndex) {

                return false; //Las celdas no son editables.

            }
        };
        pnlSur = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGrabar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Empleados");

        pnlNorte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlNorte.setLayout(new java.awt.GridLayout(9, 2));

        lblId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId.setText("Id;");
        pnlNorte.add(lblId);
        pnlNorte.add(txtId);

        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombres:");
        pnlNorte.add(lblNombre);
        pnlNorte.add(txtNombres);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Apellidos:");
        pnlNorte.add(jLabel1);
        pnlNorte.add(txtApellidos);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Número Documento Identidad (opcional):");
        pnlNorte.add(jLabel2);
        pnlNorte.add(txtDocumento);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Celular (opcional):");
        pnlNorte.add(jLabel3);
        pnlNorte.add(txtCelular);

        lblContrasena.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblContrasena.setText("Contraseña:");
        pnlNorte.add(lblContrasena);
        pnlNorte.add(txtContrasena);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email (opcional):");
        pnlNorte.add(jLabel5);
        pnlNorte.add(txtEmail);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Cargo:");
        pnlNorte.add(jLabel6);

        cboCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Empleado" }));
        pnlNorte.add(cboCargo);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Estado:");
        pnlNorte.add(jLabel7);

        cboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        pnlNorte.add(cboEstado);

        getContentPane().add(pnlNorte, java.awt.BorderLayout.NORTH);

        pnlCentro.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pnlCentro.setLayout(new java.awt.BorderLayout());

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDatosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblDatos);

        pnlCentro.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlCentro, java.awt.BorderLayout.CENTER);

        pnlSur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/agregar.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        pnlSur.add(btnNuevo);

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/grabar.png"))); // NOI18N
        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });
        pnlSur.add(btnGrabar);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/remove.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        pnlSur.add(btnEliminar);

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cerrar.png"))); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSur.add(btnCerrar);

        getContentPane().add(pnlSur, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void tblDatosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatosMousePressed
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 1 && table.getSelectedRow() != -1) {
            // Esto equivale al doble click
            //Utilidades.mensajeExito("doble click!", "Atencion");
            seleccionarFila(row);
        }
    }//GEN-LAST:event_tblDatosMousePressed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCajas();
        btnEliminar.setEnabled(false);
        btnGrabar.setEnabled(true);
        this.accion = "AGREGAR";
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        String nombre = txtNombres.getText().trim();
        if (nombre.equals("")) {
            Utilidades.mensajeAdvertencia("Debe agregar el nombre del empleado", "Atención");
            txtNombres.requestFocus();
            return;
        }
        String apellidos = txtApellidos.getText().trim();
        if (apellidos.equals("")) {
            Utilidades.mensajeAdvertencia("Debe agregar los apellidos del empleado", "Atención");
            txtApellidos.requestFocus();
            return;
        }

        if (this.accion.equals("AGREGAR")) {
            try {
                //agregar

                String constrasena = txtContrasena.getText().trim();
                if (constrasena.equals("")) {
                    Utilidades.mensajeAdvertencia("Debe asignar una contraseña al empleado", "Atención");
                    txtContrasena.requestFocus();
                    return;
                }

                EmpleadosLogicaNegocio logica = new EmpleadosLogicaNegocio();
                logica.grabar(Utilidades.capitalize(nombre), Utilidades.capitalize(apellidos), txtDocumento.getText().trim(), txtCelular.getText().trim(), txtContrasena.getText().trim(), txtEmail.getText().trim(), cboCargo.getSelectedItem().toString().substring(0, 1), cboEstado.getSelectedItem().toString().substring(0, 1));
                Utilidades.mensajeExito("Empleado agregado con éxito", title);
                this.cargarDatosTabla();
                estadoInicialCajasBotones();
            } catch (Exception ex) {
                Utilidades.mensajeAdvertencia("Ocurrió un error al grabar 'n" + ex.getMessage(), "Ocurrió un error al grabar");
                Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            try {
                //Editar
                EmpleadosLogicaNegocio logica = new EmpleadosLogicaNegocio();
                logica.editar(Integer.parseInt(txtId.getText()), Utilidades.capitalize(nombre), Utilidades.capitalize(apellidos), txtDocumento.getText().trim(), txtCelular.getText().trim(), txtContrasena.getText().trim(), txtEmail.getText().trim(), cboCargo.getSelectedItem().toString().substring(0, 1), cboEstado.getSelectedItem().toString().substring(0, 1));
                Utilidades.mensajeExito("Empleado editado con éxito", title);
                this.cargarDatosTabla();
                estadoInicialCajasBotones();
            } catch (Exception ex) {
                Utilidades.mensajeAdvertencia("Hubo un error al editar el Empleado.\n" + ex.getMessage(), "Lo siento mucho");
                Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        if (Utilidades.mensajeConfirmacion("Está seguro que desea eliminar el empleado " + txtId.getText() + "?", "Atención") == JOptionPane.YES_OPTION) {
            try {
                EmpleadosLogicaNegocio logica = new EmpleadosLogicaNegocio();
                logica.eliminar(Integer.parseInt(txtId.getText()));
                Utilidades.mensajeExito("Empleado borrado con éxito", "Atención");
                this.cargarDatosTabla();
                estadoInicialCajasBotones();
            } catch (Exception ex) {
                Utilidades.mensajeAdvertencia("No se pudo eliminar el empleado, ya tiene asociadas transacciones.\n" + ex.getMessage(), "Lo siento mucho");
                Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed
    private void estadoInicialCajasBotones() {
        txtId.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDocumento.setText("");
        txtCelular.setText("");
        txtContrasena.setText("");
        txtEmail.setText("");
        cboCargo.setSelectedIndex(0);
        cboEstado.setSelectedIndex(0);
        txtId.setEnabled(false);
        txtNombres.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtDocumento.setEnabled(false);
        txtCelular.setEnabled(false);
        txtContrasena.setEnabled(false);
        txtEmail.setEnabled(false);
        cboCargo.setEnabled(false);
        cboEstado.setEnabled(false);
        btnGrabar.setEnabled(false);
        btnEliminar.setEnabled(false);
        lblContrasena.setText("Contraseña:");
    }

    private void limpiarCajas() {
        txtId.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDocumento.setText("");
        txtCelular.setText("");
        txtContrasena.setText("");
        txtEmail.setText("");
        cboCargo.setSelectedIndex(0);
        cboEstado.setSelectedIndex(0);
        txtId.setEnabled(false);
        txtNombres.setEnabled(true);
        txtApellidos.setEnabled(true);
        txtDocumento.setEnabled(true);
        txtCelular.setEnabled(true);
        txtContrasena.setEnabled(true);
        txtEmail.setEnabled(true);
        cboCargo.setEnabled(true);
        cboEstado.setEnabled(true);
        lblContrasena.setText("Contraseña:");
        txtNombres.requestFocus();
    }

    private void seleccionarFila(int row) {
        txtId.setText(tblDatos.getValueAt(row, 0).toString());
        txtNombres.setText(tblDatos.getValueAt(row, 1).toString());
        txtApellidos.setText(tblDatos.getValueAt(row, 2).toString());       
        txtDocumento.setText(tblDatos.getValueAt(row, 3).toString());        
        txtCelular.setText(tblDatos.getValueAt(row, 4).toString());        
        txtContrasena.setText("");
        txtEmail.setText(tblDatos.getValueAt(row, 5).toString());        
        cboCargo.setSelectedItem(tblDatos.getValueAt(row, 6).toString());
        cboEstado.setSelectedItem(tblDatos.getValueAt(row, 7).toString());
        
        txtId.setEnabled(false);
        txtNombres.setEnabled(true);
        txtApellidos.setEnabled(true);
        txtDocumento.setEnabled(true);
        txtCelular.setEnabled(true);
        txtContrasena.setEnabled(true);
        txtEmail.setEnabled(true);
        cboCargo.setEnabled(true);
        cboEstado.setEnabled(true);        
        btnGrabar.setEnabled(true);
        btnEliminar.setEnabled(true);
        this.accion = "EDITAR";
        lblContrasena.setText("Contraseña (en blanco conserva la que tiene):");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cboCargo;
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblContrasena;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JPanel pnlCentro;
    private javax.swing.JPanel pnlNorte;
    private javax.swing.JPanel pnlSur;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
